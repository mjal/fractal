// Generated by CoffeeScript 1.6.3
(function() {
  var N, app, c, canvas, ctx, draw, f, log2, n2;

  canvas = document.querySelector("canvas");

  ctx = canvas.getContext("2d");

  c = [
    {
      x: 0.285,
      y: 0
    }, {
      y: 0,
      x: 1 - 1.6180339887
    }, {
      x: 0.4,
      y: 0.6
    }, {
      x: 0.285,
      y: 0.01
    }
  ];

  f = function(c, z) {
    return {
      x: z.x * z.x - z.y * z.y + c.x,
      y: 2 * z.y * z.x + c.y
    };
  };

  n2 = function(z) {
    return z.x * z.x + z.y * z.y;
  };

  log2 = 1 / Math.log(2.0);

  draw = function(p, d, c, it) {
    var X, Y, dx, dy, i, j, n, w, z, _results;
    ctx.fillStyle = "rgb(0,0,0)";
    ctx.fillRect(0, 0, canvas.width, canvas.height);
    X = p.x - d.x / 2;
    dx = d.x / canvas.width;
    dy = d.y / canvas.height;
    i = 0;
    _results = [];
    while (i < canvas.width) {
      j = 0;
      Y = p.y - d.y / 2;
      while (j < canvas.height) {
        z = {
          x: X,
          y: Y
        };
        n = 0;
        while (++n < it && n2(z) < 4) {
          z = f({
            x: X,
            y: Y
          }, z);
        }
        w = 0;
        if (n === it) {
          w = 255;
        }
        ctx.fillStyle = "rgb(" + w + "," + w + "," + w + ")";
        ctx.fillRect(i, j, 1, 1);
        Y += dy;
        j++;
      }
      X += dx;
      _results.push(i++);
    }
    return _results;
  };

  N = 3;

  app = angular.module('app', []);

  app.controller('FractaltCtrl', function($scope) {
    $scope.redraw = false;
    $scope.px = 0;
    $scope.py = 0;
    $scope.dx = 2.5;
    $scope.dy = 2.5;
    $scope.a = c[N].x;
    $scope.b = c[N].y;
    $scope.iteration = 60;
    $scope.keyPress = function(char) {
      console.log('keypress:' + char);
      if (char === 65) {
        $scope.p.x -= 0.1 * zoom;
      }
      if (char === 68) {
        $scope.p.x += 0.1 * zoom;
      }
      if (char === 87) {
        $scope.p.y -= 0.1 * zoom;
      }
      if (char === 83) {
        $scope.p.y += 0.1 * zoom;
      }
      if (char === 90) {
        zoom *= 0.9;
      }
      if (char === 88) {
        zoom *= 1.1;
      }
      if (char === 72) {
        $scope.a += 0.01;
      }
      if (char === 74) {
        $scope.b += 0.01;
      }
      if (char === 75) {
        $scope.a -= 0.01;
      }
      if (char === 76) {
        $scope.b -= 0.01;
      }
      if (char === 78) {
        N = (N + 1) % c.length;
        $scope.a = c[N].x;
        return $scope.b = c[N].y;
      }
    };
    $scope.draw = function() {
      console.log("draw");
      draw({
        x: $scope.px,
        y: $scope.py
      }, {
        x: $scope.dx,
        y: $scope.dy
      }, {
        x: $scope.a,
        y: $scope.b
      }, $scope.iteration);
      return console.log("enddraw");
    };
    $scope.zoom = function(e) {
      var x, y;
      x = e.pageX - $("canvas").offset().left;
      y = e.pageY - $("canvas").offset().top;
      $scope.px += (x - $("canvas").width() / 2) / $("canvas").width() * $scope.dx;
      $scope.py += (y - $("canvas").height() / 2) / $("canvas").height() * $scope.dy;
      $scope.dx /= 6 / 4;
      $scope.dy /= 6 / 4;
      if ($scope.redraw) {
        return $scope.draw();
      }
    };
    $scope.move = function(dir) {
      if (dir === "left") {
        $scope.px -= $scope.dx / 4;
      }
      if (dir === "right") {
        $scope.px += $scope.dx / 4;
      }
      if (dir === "up") {
        $scope.py -= $scope.dy / 4;
      }
      if (dir === "down") {
        $scope.py += $scope.dy / 4;
      }
      if ($scope.redraw) {
        return $scope.draw();
      }
    };
    $scope.movec = function(dir) {
      if (dir === "left") {
        $scope.a -= 0.001;
      }
      if (dir === "right") {
        $scope.a += 0.001;
      }
      if (dir === "up") {
        $scope.b -= 0.001;
      }
      if (dir === "down") {
        $scope.b += 0.001;
      }
      if ($scope.redraw) {
        return $scope.draw();
      }
    };
    return $scope.moveit = function(dir) {
      if (dir === "up") {
        $scope.iteration += 5;
      }
      if (dir === "down") {
        $scope.iteration -= 5;
      }
      if ($scope.redraw) {
        return $scope.draw();
      }
    };
  });

}).call(this);
