// Generated by CoffeeScript 1.7.1
(function() {
  var N, app, c, canvas, ctx, draw, f, n2, p, zoom;

  canvas = document.querySelector("canvas");

  ctx = canvas.getContext("2d");

  p = {
    x: -0,
    y: -0
  };

  c = [
    {
      x: 0.285,
      y: 0
    }, {
      y: 0,
      x: 1 - 1.6180339887
    }, {
      x: 0.4,
      y: 0.6
    }, {
      x: 0.285,
      y: 0.01
    }
  ];

  f = function(c, z) {
    return {
      x: z.x * z.x - z.y * z.y + c.x,
      y: 2 * z.y * z.x + c.y
    };
  };

  n2 = function(z) {
    return z.x * z.x + z.y * z.y;
  };

  draw = function(p, c, zoom, it) {
    var i, img, img_ctx, j, n, w, z;
    ctx.fillStyle = "rgb(0,0,0)";
    i = 0;
    img = new Image();
    img.width = 1600;
    img.height = 1600;
    img_ctx = ctx.createImageData(1600, 1600);
    while (i < img.width) {
      j = 0;
      while (j < img.height) {
        z = {
          x: p.x + i * zoom / img.width,
          y: p.y + j * zoom / img.height
        };
        n = 0;
        while (++n < it && n2(z) < 4) {
          z = f(c, z);
        }
        if (n === it) {
          w = Math.sqrt(n2(z)) * 256;
          img_ctx.data[(i * img.width + j) * 4] = w;
          img_ctx.data[(i * img.width + j) * 4 + 1] = w;
          img_ctx.data[(i * img.width + j) * 4 + 2] = w;
          img_ctx.data[(i * img.width + j) * 4 + 3] = w;
        } else {
          img_ctx.data[(i * img.width + j) * 4] = 0;
          img_ctx.data[(i * img.width + j) * 4 + 1] = 0;
          img_ctx.data[(i * img.width + j) * 4 + 2] = 0;
          img_ctx.data[(i * img.width + j) * 4 + 3] = 255;
        }
        j++;
      }
      i++;
    }
    return ctx.putImageData(img_ctx, 0, 0);
  };

  zoom = 1;

  N = 0;

  app = angular.module('app', []);

  app.controller('FractaltCtrl', function($scope) {
    var done;
    $scope.x = 0;
    $scope.y = 0;
    $scope.a = c[N].x;
    $scope.b = c[N].y;
    $scope.iteration = 60;
    done = true;
    setInterval((function() {
      if (done === false) {
        return;
      }
      done = false;
      ctx.fillStyle = "rgb(255,255,255)";
      ctx.fillRect(0, 0, canvas.width, canvas.height);
      console.log("draw");
      draw({
        x: $scope.x,
        y: $scope.y
      }, {
        x: $scope.a,
        y: $scope.b
      }, zoom, $scope.iteration);
      done = true;
      return console.log("enddraw");
    }), 2000);
    return $scope.keyPress = function(char) {
      console.log({
        x: $scope.a,
        y: $scope.b
      });
      console.log('keypress:' + char);
      if (char === 65) {
        $scope.x -= 0.1 * zoom;
      }
      if (char === 68) {
        $scope.x += 0.1 * zoom;
      }
      if (char === 87) {
        $scope.y -= 0.1 * zoom;
      }
      if (char === 83) {
        $scope.y += 0.1 * zoom;
      }
      if (char === 90) {
        zoom *= 0.9;
      }
      if (char === 88) {
        zoom *= 1.1;
      }
      if (char === 72) {
        $scope.a += 0.01;
      }
      if (char === 74) {
        $scope.b += 0.01;
      }
      if (char === 75) {
        $scope.a -= 0.01;
      }
      if (char === 76) {
        $scope.b -= 0.01;
      }
      if (char === 78) {
        N = (N + 1) % c.length;
        $scope.a = c[N].x;
        return $scope.b = c[N].y;
      }
    };
  });

}).call(this);
