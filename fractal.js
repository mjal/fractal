// Generated by CoffeeScript 1.7.1
(function() {
  var N, c, canvas, ctx, downX, downY, draw, f, iteration_max, n2, p, upX, upY, x1, x2, y1, y2, zoom, zoom_x, zoom_y;

  canvas = document.querySelector("canvas");

  ctx = canvas.getContext("2d");

  iteration_max = 50;

  x1 = -2.1;

  y1 = -1.2;

  x2 = 0.6;

  y2 = 1.2;

  zoom_x = canvas.width / (x2 - x1);

  zoom_y = canvas.height / (y2 - y1);

  f = function(c, z) {
    return {
      x: z.x * z.x - z.y * z.y + c.x,
      y: 2 * z.y * z.x + c.y
    };
  };

  n2 = function(z) {
    return z.x * z.x + z.y * z.y;
  };

  p = {
    x: -0,
    y: -0
  };

  c = [
    {
      x: 0.285,
      y: 0
    }, {
      y: 0,
      x: 1 - 1.6180339887
    }, {
      x: 0.4,
      y: 0.6
    }, {
      x: 0.285,
      y: 0.01
    }
  ];

  draw = function(p, zoom, c) {
    var i, img, img_ctx, j, n, w, z, _results;
    ctx.fillStyle = "rgb(0,0,0)";
    i = 0;
    img = new Image();
    img.width = 800;
    img.height = 800;
    img_ctx = ctx.getImageData(0, 0, img.width, img.height);
    _results = [];
    while (i < img.width) {
      j = 0;
      while (j < img.height) {
        z = {
          x: p.x + i * zoom / img.width,
          y: p.y + j * zoom / img.height
        };
        n = 0;
        while (++n < iteration_max && n2(z) < 4) {
          z = f(c, z);
        }
        if (n === iteration_max) {
          w = Math.sqrt(n2(z)) * 256;
          img_ctx.data[(i * 800 + j) * 4] = 255;
          img_ctx.data[(i * 800 + j) * 4 + 1] = 255;
          img_ctx.data[(i * 800 + j) * 4 + 2] = 255;
          img_ctx.data[(i * 800 + j) * 4 + 3] = 255;
          ctx.fillRect(i, j, 1, 1);
        }
        j++;
      }
      i++;
      _results.push(ctx.putImageData(img_ctx, 0, 0, img.width, img.height, canvas.width, canvas.height));
    }
    return _results;
  };

  zoom = 1;

  N = 0;

  draw(p, zoom, c[N]);

  upX = upY = downX = downY = false;

  document.addEventListener('keypress', (function(e) {
    var char;
    char = e.which || e.keyCode;
    console.log('keypress:' + char);
    if (char === 97) {
      p.x -= 0.1 * zoom;
    }
    if (char === 100) {
      p.x += 0.1 * zoom;
    }
    if (char === 119) {
      p.y -= 0.1 * zoom;
    }
    if (char === 115) {
      p.y += 0.1 * zoom;
    }
    if (char === 120) {
      zoom *= 0.9;
    }
    if (char === 122) {
      zoom *= 1.1;
    }
    if (char === 104) {
      c[N].x += 0.01;
    }
    if (char === 106) {
      c[N].y += 0.01;
    }
    if (char === 107) {
      c[N].x -= 0.01;
    }
    if (char === 108) {
      c[N].y -= 0.01;
    }
    if (char === 110) {
      N = (N + 1) % c.length;
    }
    ctx.fillStyle = "rgb(255,255,255)";
    ctx.fillRect(0, 0, canvas.width, canvas.height);
    return draw(p, zoom, c[N]);
  }), false);

}).call(this);
